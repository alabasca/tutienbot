import discord
from discord.ext import commands
import asyncio
import datetime
import random
import logging
import json
import os
from typing import Dict, List, Optional

from database.mongo_handler import get_user_or_create, update_user, get_sect, create_sect, add_member_to_sect, \
    remove_member_from_sect
from config import (
    CULTIVATION_REALMS, EMBED_COLOR, EMBED_COLOR_SUCCESS,
    EMBED_COLOR_ERROR, EMOJI_LINH_THACH
)

# C·∫•u h√¨nh logging
logger = logging.getLogger("tutien-bot.sect")


class SectCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.load_sects()

    def load_sects(self):
        """T·∫£i d·ªØ li·ªáu c√°c m√¥n ph√°i t·ª´ JSON"""
        try:
            if os.path.exists("data/sects.json"):
                with open("data/sects.json", "r", encoding="utf-8") as f:
                    data = json.load(f)
                    self.sect_templates = data.get("sects", [])
                logger.info(f"ƒê√£ t·∫£i {len(self.sect_templates)} m·∫´u m√¥n ph√°i t·ª´ JSON")
            else:
                logger.warning("Kh√¥ng t√¨m th·∫•y file data/sects.json")
                self.sect_templates = []
        except Exception as e:
            logger.error(f"L·ªói khi t·∫£i d·ªØ li·ªáu m√¥n ph√°i: {e}")
            self.sect_templates = []

    @commands.group(name="monphai", aliases=["mp", "sect"], invoke_without_command=True)
    async def sect(self, ctx):
        """Hi·ªÉn th·ªã th√¥ng tin v·ªÅ m√¥n ph√°i c·ªßa b·∫°n ho·∫∑c danh s√°ch c√°c m√¥n ph√°i"""
        if ctx.invoked_subcommand is None:
            # L·∫•y th√¥ng tin ng∆∞·ªùi d√πng
            user = await get_user_or_create(ctx.author.id, ctx.author.name)
            sect_id = user.get("sect_id")

            # N·∫øu ng∆∞·ªùi d√πng ƒë√£ gia nh·∫≠p m√¥n ph√°i
            if sect_id:
                # L·∫•y th√¥ng tin m√¥n ph√°i
                sect = await get_sect(sect_id)

                if sect:
                    # T·∫°o embed hi·ªÉn th·ªã th√¥ng tin m√¥n ph√°i
                    embed = discord.Embed(
                        title=f"M√¥n Ph√°i: {sect['name']}",
                        description=sect.get("description", "Kh√¥ng c√≥ m√¥ t·∫£"),
                        color=EMBED_COLOR
                    )

                    # Th√™m th√¥ng tin ch·ªß s·ªü h·ªØu
                    owner_id = sect["owner_id"]
                    owner = self.bot.get_user(owner_id)
                    owner_name = owner.name if owner else "Kh√¥ng x√°c ƒë·ªãnh"

                    embed.add_field(
                        name="Ch∆∞·ªüng M√¥n",
                        value=owner_name,
                        inline=True
                    )

                    # Th√™m th√¥ng tin c·∫•p ƒë·ªô v√† t√†i nguy√™n
                    embed.add_field(
                        name="C·∫•p ƒê·ªô",
                        value=str(sect.get("level", 1)),
                        inline=True
                    )

                    embed.add_field(
                        name="T√†i Nguy√™n",
                        value=f"{EMOJI_LINH_THACH} {sect.get('resources', 0):,}",
                        inline=True
                    )

                    # Th√™m th√¥ng tin th√†nh vi√™n
                    member_count = len(sect.get("members", []))
                    embed.add_field(
                        name="Th√†nh Vi√™n",
                        value=f"{member_count} th√†nh vi√™n",
                        inline=True
                    )

                    # Th√™m th·ªùi gian th√†nh l·∫≠p
                    created_at = sect.get("created_at")
                    if created_at:
                        embed.add_field(
                            name="Th√†nh L·∫≠p",
                            value=created_at.strftime("%d/%m/%Y") if isinstance(created_at, datetime.datetime) else str(
                                created_at),
                            inline=True
                        )

                    # Th√™m h∆∞·ªõng d·∫´n
                    embed.add_field(
                        name="L·ªánh Li√™n Quan",
                        value=(
                            "`!monphai thanhvien` - Xem danh s√°ch th√†nh vi√™n\n"
                            "`!monphai roi` - R·ªùi kh·ªèi m√¥n ph√°i\n"
                            "`!monphai conghien [s·ªë linh th·∫°ch]` - C·ªëng hi·∫øn linh th·∫°ch cho m√¥n ph√°i"
                        ),
                        inline=False
                    )

                    # G·ª≠i embed
                    await ctx.send(embed=embed)
                else:
                    # N·∫øu kh√¥ng t√¨m th·∫•y th√¥ng tin m√¥n ph√°i
                    embed = discord.Embed(
                        title="‚ùå L·ªói",
                        description=f"Kh√¥ng t√¨m th·∫•y th√¥ng tin v·ªÅ m√¥n ph√°i c·ªßa b·∫°n. C√≥ th·ªÉ do l·ªói d·ªØ li·ªáu.",
                        color=EMBED_COLOR_ERROR
                    )
                    await ctx.send(embed=embed)
            else:
                # N·∫øu ch∆∞a gia nh·∫≠p m√¥n ph√°i
                embed = discord.Embed(
                    title="M√¥n Ph√°i",
                    description="B·∫°n ch∆∞a gia nh·∫≠p m√¥n ph√°i n√†o. H√£y s·ª≠ d·ª•ng l·ªánh `!monphai danhsach` ƒë·ªÉ xem danh s√°ch c√°c m√¥n ph√°i ho·∫∑c `!monphai tao [t√™n] [m√¥ t·∫£]` ƒë·ªÉ t·∫°o m√¥n ph√°i m·ªõi.",
                    color=EMBED_COLOR
                )
                await ctx.send(embed=embed)

    @sect.command(name="danhsach", aliases=["ds", "list"])
    async def sect_list(self, ctx):
        """Hi·ªÉn th·ªã danh s√°ch c√°c m√¥n ph√°i m·∫´u"""
        # Ki·ªÉm tra c√≥ d·ªØ li·ªáu kh√¥ng
        if not self.sect_templates:
            embed = discord.Embed(
                title="Danh S√°ch M√¥n Ph√°i",
                description="Kh√¥ng c√≥ d·ªØ li·ªáu v·ªÅ c√°c m√¥n ph√°i m·∫´u. H√£y s·ª≠ d·ª•ng l·ªánh `!monphai tao [t√™n] [m√¥ t·∫£]` ƒë·ªÉ t·∫°o m√¥n ph√°i m·ªõi.",
                color=EMBED_COLOR
            )
            return await ctx.send(embed=embed)

        # T·∫°o embed
        embed = discord.Embed(
            title="Danh S√°ch M√¥n Ph√°i",
            description="C√°c m√¥n ph√°i ti√™u bi·ªÉu trong th·∫ø gi·ªõi tu ti√™n:",
            color=EMBED_COLOR
        )

        # Th√™m th√¥ng tin t·ª´ng m√¥n ph√°i
        for i, sect in enumerate(self.sect_templates, 1):
            embed.add_field(
                name=f"{i}. {sect['name']}",
                value=f"{sect['description']}\nV·ªã tr√≠: {sect.get('base_location', 'Kh√¥ng r√µ')}\nT√¥ng ch·ªß: {sect.get('founder', 'Kh√¥ng r√µ')}",
                inline=False
            )

        # Th√™m h∆∞·ªõng d·∫´n
        embed.add_field(
            name="Tham Gia M√¥n Ph√°i",
            value="S·ª≠ d·ª•ng l·ªánh `!monphai thamgia [t√™n m√¥n ph√°i]` ƒë·ªÉ xin gia nh·∫≠p m√¥n ph√°i.\nHo·∫∑c t·∫°o m√¥n ph√°i ri√™ng v·ªõi l·ªánh `!monphai tao [t√™n] [m√¥ t·∫£]`.",
            inline=False
        )

        # G·ª≠i embed
        await ctx.send(embed=embed)

    @sect.command(name="thanhvien", aliases=["tv", "members"])
    async def sect_members(self, ctx):
        """Hi·ªÉn th·ªã danh s√°ch th√†nh vi√™n c·ªßa m√¥n ph√°i"""
        # L·∫•y th√¥ng tin ng∆∞·ªùi d√πng
        user = await get_user_or_create(ctx.author.id, ctx.author.name)
        sect_id = user.get("sect_id")

        # Ki·ªÉm tra ƒë√£ gia nh·∫≠p m√¥n ph√°i ch∆∞a
        if not sect_id:
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description="B·∫°n ch∆∞a gia nh·∫≠p m√¥n ph√°i n√†o.",
                color=EMBED_COLOR_ERROR
            )
            return await ctx.send(embed=embed)

        # L·∫•y th√¥ng tin m√¥n ph√°i
        sect = await get_sect(sect_id)

        if not sect:
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description=f"Kh√¥ng t√¨m th·∫•y th√¥ng tin v·ªÅ m√¥n ph√°i c·ªßa b·∫°n. C√≥ th·ªÉ do l·ªói d·ªØ li·ªáu.",
                color=EMBED_COLOR_ERROR
            )
            return await ctx.send(embed=embed)

        # L·∫•y danh s√°ch th√†nh vi√™n
        members = sect.get("members", [])

        # N·∫øu kh√¥ng c√≥ th√†nh vi√™n
        if not members:
            embed = discord.Embed(
                title=f"Th√†nh Vi√™n M√¥n Ph√°i: {sect['name']}",
                description="M√¥n ph√°i ch∆∞a c√≥ th√†nh vi√™n n√†o.",
                color=EMBED_COLOR
            )
            return await ctx.send(embed=embed)

        # T·∫°o embed
        embed = discord.Embed(
            title=f"Th√†nh Vi√™n M√¥n Ph√°i: {sect['name']}",
            description=f"T·ªïng s·ªë: {len(members)} th√†nh vi√™n",
            color=EMBED_COLOR
        )

        # Th√™m th√¥ng tin t·ª´ng th√†nh vi√™n
        from database.mongo_handler import users_collection

        # L·∫•y th√¥ng tin chi ti·∫øt c·ªßa c√°c th√†nh vi√™n
        member_details = []
        for member_id in members:
            user_data = await users_collection.find_one({"user_id": member_id})
            if user_data:
                # L·∫•y th√¥ng tin tu vi
                realm_id = user_data.get("realm_id", 0)
                realm_name = CULTIVATION_REALMS[realm_id]["name"] if realm_id < len(CULTIVATION_REALMS) else "Kh√¥ng r√µ"

                # L·∫•y th√¥ng tin discord
                member = ctx.guild.get_member(member_id)
                name = member.display_name if member else user_data.get("username", "Kh√¥ng r√µ")

                # ƒê√°nh d·∫•u ch·ªß s·ªü h·ªØu
                if member_id == sect["owner_id"]:
                    name = f"üëë {name}"

                member_details.append({
                    "name": name,
                    "realm": realm_name,
                    "exp": user_data.get("experience", 0),
                    "is_owner": member_id == sect["owner_id"]
                })

        # S·∫Øp x·∫øp: ch·ªß s·ªü h·ªØu ƒë·∫ßu ti√™n, sau ƒë√≥ theo kinh nghi·ªám
        member_details.sort(key=lambda x: (-1 if x["is_owner"] else 0, -x["exp"]))

        # Th√™m v√†o embed
        member_text = ""
        for i, member in enumerate(member_details, 1):
            member_text += f"{i}. **{member['name']}** - {member['realm']}\n"

            # Gi·ªõi h·∫°n s·ªë l∆∞·ª£ng hi·ªÉn th·ªã
            if i >= 20:
                member_text += f"... v√† {len(member_details) - 20} th√†nh vi√™n kh√°c"
                break

        embed.description = member_text

        # G·ª≠i embed
        await ctx.send(embed=embed)

    @sect.command(name="tao", aliases=["create", "new"])
    async def create_sect(self, ctx, *, info: str = None):
        """T·∫°o m√¥n ph√°i m·ªõi"""
        # Ki·ªÉm tra th√¥ng tin ƒë·∫ßu v√†o
        if not info:
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description="Vui l√≤ng cung c·∫•p t√™n v√† m√¥ t·∫£ cho m√¥n ph√°i.\nV√≠ d·ª•: `!monphai tao Thi√™n Long T√¥ng | M√¥n ph√°i chuy√™n tu luy·ªán th·ªßy thu·ªôc t√≠nh`",
                color=EMBED_COLOR_ERROR
            )
            return await ctx.send(embed=embed)

        # T√°ch t√™n v√† m√¥ t·∫£
        parts = info.split("|", 1)
        name = parts[0].strip()
        description = parts[1].strip() if len(parts) > 1 else "Kh√¥ng c√≥ m√¥ t·∫£"

        # Ki·ªÉm tra ƒë·ªô d√†i t√™n
        if len(name) < 3 or len(name) > 30:
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description="T√™n m√¥n ph√°i ph·∫£i c√≥ ƒë·ªô d√†i t·ª´ 3 ƒë·∫øn 30 k√Ω t·ª±.",
                color=EMBED_COLOR_ERROR
            )
            return await ctx.send(embed=embed)

        # L·∫•y th√¥ng tin ng∆∞·ªùi d√πng
        user = await get_user_or_create(ctx.author.id, ctx.author.name)

        # Ki·ªÉm tra ƒë√£ c√≥ m√¥n ph√°i ch∆∞a
        if user.get("sect_id"):
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description="B·∫°n ƒë√£ l√† th√†nh vi√™n c·ªßa m·ªôt m√¥n ph√°i. H√£y r·ªùi kh·ªèi m√¥n ph√°i hi·ªán t·∫°i tr∆∞·ªõc khi t·∫°o m√¥n ph√°i m·ªõi.",
                color=EMBED_COLOR_ERROR
            )
            return await ctx.send(embed=embed)

        # Ki·ªÉm tra c·∫£nh gi·ªõi t·ªëi thi·ªÉu (Tr√∫c C∆°)
        if user.get("realm_id", 0) < 10:
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description=f"B·∫°n c·∫ßn ƒë·∫°t √≠t nh·∫•t c·∫£nh gi·ªõi **Tr√∫c C∆°** ƒë·ªÉ t·∫°o m√¥n ph√°i. C·∫£nh gi·ªõi hi·ªán t·∫°i: **{CULTIVATION_REALMS[user.get('realm_id', 0)]['name']}**",
                color=EMBED_COLOR_ERROR
            )
            return await ctx.send(embed=embed)

        # Ki·ªÉm tra linh th·∫°ch (1000)
        if user.get("linh_thach", 0) < 1000:
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description=f"B·∫°n c·∫ßn c√≥ √≠t nh·∫•t **1000** linh th·∫°ch ƒë·ªÉ t·∫°o m√¥n ph√°i. Linh th·∫°ch hi·ªán c√≥: **{user.get('linh_thach', 0)}**",
                color=EMBED_COLOR_ERROR
            )
            return await ctx.send(embed=embed)

        # T·∫°o m√¥n ph√°i m·ªõi
        try:
            # Tr·ª´ linh th·∫°ch
            await update_user(ctx.author.id, {"linh_thach": user.get("linh_thach", 0) - 1000})

            # T·∫°o m√¥n ph√°i
            sect = await create_sect(ctx.author.id, name, description)

            # T·∫°o embed th√¥ng b√°o
            embed = discord.Embed(
                title="‚úÖ T·∫°o M√¥n Ph√°i Th√†nh C√¥ng",
                description=f"Ch√∫c m·ª´ng! B·∫°n ƒë√£ t·∫°o m√¥n ph√°i **{name}** th√†nh c√¥ng!",
                color=EMBED_COLOR_SUCCESS
            )

            # Th√™m chi ti·∫øt
            embed.add_field(
                name="Chi Ph√≠",
                value=f"{EMOJI_LINH_THACH} -1000 linh th·∫°ch",
                inline=False
            )

            embed.add_field(
                name="H∆∞·ªõng D·∫´n",
                value=(
                        "1. S·ª≠ d·ª•ng `!monphai thanhvien` ƒë·ªÉ xem danh s√°ch th√†nh vi√™n\n"
                        "2. M·ªùi ng∆∞·ªùi kh√°c tham gia b·∫±ng c√°ch h·ªç s·ª≠ d·ª•ng l·ªánh `!monphai thamgia " + name + "`\n"
                                                                                                           "3. Ph√°t tri·ªÉn m√¥n ph√°i b·∫±ng c√°ch ƒë√≥ng g√≥p linh th·∫°ch v·ªõi l·ªánh `!monphai conghien [s·ªë l∆∞·ª£ng]`"
                ),
                inline=False
            )

            # G·ª≠i embed
            await ctx.send(embed=embed)

            # Log
            logger.info(f"{ctx.author.name} ƒë√£ t·∫°o m√¥n ph√°i m·ªõi: {name}")

        except Exception as e:
            # X·ª≠ l√Ω l·ªói
            logger.error(f"L·ªói khi t·∫°o m√¥n ph√°i: {e}")

            embed = discord.Embed(
                title="‚ùå L·ªói",
                description=f"ƒê√£ x·∫£y ra l·ªói khi t·∫°o m√¥n ph√°i: {str(e)}",
                color=EMBED_COLOR_ERROR
            )
            await ctx.send(embed=embed)

    @sect.command(name="thamgia", aliases=["join"])
    async def join_sect(self, ctx, *, sect_name: str = None):
        """Tham gia v√†o m√¥n ph√°i"""
        # Ki·ªÉm tra t√™n m√¥n ph√°i
        if not sect_name:
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description="Vui l√≤ng cung c·∫•p t√™n m√¥n ph√°i b·∫°n mu·ªën tham gia.\nV√≠ d·ª•: `!monphai thamgia Thi√™n Long T√¥ng`",
                color=EMBED_COLOR_ERROR
            )
            return await ctx.send(embed=embed)

        # L·∫•y th√¥ng tin ng∆∞·ªùi d√πng
        user = await get_user_or_create(ctx.author.id, ctx.author.name)

        # Ki·ªÉm tra ƒë√£ c√≥ m√¥n ph√°i ch∆∞a
        if user.get("sect_id"):
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description="B·∫°n ƒë√£ l√† th√†nh vi√™n c·ªßa m·ªôt m√¥n ph√°i. H√£y r·ªùi kh·ªèi m√¥n ph√°i hi·ªán t·∫°i tr∆∞·ªõc khi tham gia m√¥n ph√°i kh√°c.",
                color=EMBED_COLOR_ERROR
            )
            return await ctx.send(embed=embed)

        # T√¨m ki·∫øm m√¥n ph√°i theo t√™n
        from database.mongo_handler import sects_collection
        sect = await sects_collection.find_one({"name": {"$regex": f"^{sect_name}$", "$options": "i"}})

        # N·∫øu kh√¥ng t√¨m th·∫•y
        if not sect:
            # Ki·ªÉm tra m·∫´u m√¥n ph√°i
            template_sect = None
            for s in self.sect_templates:
                if s["name"].lower() == sect_name.lower():
                    template_sect = s
                    break

            if template_sect:
                # Hi·ªÉn th·ªã th√¥ng tin m√¥n ph√°i m·∫´u
                embed = discord.Embed(
                    title=f"M√¥n Ph√°i: {template_sect['name']}",
                    description=template_sect.get("description", "Kh√¥ng c√≥ m√¥ t·∫£"),
                    color=EMBED_COLOR
                )

                embed.add_field(
                    name="Th√¥ng Tin",
                    value=(
                        f"V·ªã tr√≠: {template_sect.get('base_location', 'Kh√¥ng r√µ')}\n"
                        f"T√¥ng ch·ªß: {template_sect.get('founder', 'Kh√¥ng r√µ')}\n"
                        f"NƒÉm th√†nh l·∫≠p: {template_sect.get('establishment_year', 'Kh√¥ng r√µ')}"
                    ),
                    inline=False
                )

                embed.add_field(
                    name="L∆∞u √ù",
                    value="ƒê√¢y l√† m√¥n ph√°i m·∫´u trong th·∫ø gi·ªõi tu ti√™n. ƒê·ªÉ tham gia, b·∫°n c·∫ßn t√¨m m·ªôt m√¥n ph√°i ƒë∆∞·ª£c t·∫°o b·ªüi ng∆∞·ªùi ch∆°i kh√°c, ho·∫∑c t·∫°o m√¥n ph√°i ri√™ng c·ªßa m√¨nh v·ªõi l·ªánh `!monphai tao`.",
                    inline=False
                )

                return await ctx.send(embed=embed)
            else:
                # Kh√¥ng t√¨m th·∫•y m√¥n ph√°i
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description=f"Kh√¥ng t√¨m th·∫•y m√¥n ph√°i n√†o c√≥ t√™n **{sect_name}**. H√£y ki·ªÉm tra l·∫°i t√™n ho·∫∑c s·ª≠ d·ª•ng l·ªánh `!monphai danhsach` ƒë·ªÉ xem danh s√°ch c√°c m√¥n ph√°i m·∫´u.",
                    color=EMBED_COLOR_ERROR
                )
                return await ctx.send(embed=embed)

        # L·∫•y th√¥ng tin ch·ªß s·ªü h·ªØu
        owner_id = sect["owner_id"]
        owner = self.bot.get_user(owner_id)
        owner_name = owner.name if owner else "Kh√¥ng x√°c ƒë·ªãnh"

        # T·∫°o embed x√°c nh·∫≠n
        embed = discord.Embed(
            title=f"X√°c Nh·∫≠n Tham Gia M√¥n Ph√°i: {sect['name']}",
            description=f"B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën tham gia m√¥n ph√°i **{sect['name']}**?\n\nCh·ªß s·ªü h·ªØu: {owner_name}\nS·ªë th√†nh vi√™n: {len(sect.get('members', []))}\nM√¥ t·∫£: {sect.get('description', 'Kh√¥ng c√≥ m√¥ t·∫£')}",
            color=EMBED_COLOR
        )

        # G·ª≠i embed x√°c nh·∫≠n
        confirm_msg = await ctx.send(embed=embed)

        # Th√™m reaction ƒë·ªÉ x√°c nh·∫≠n
        await confirm_msg.add_reaction("‚úÖ")
        await confirm_msg.add_reaction("‚ùå")

        # H√†m ki·ªÉm tra reaction
        def check(reaction, user):
            return user.id == ctx.author.id and str(reaction.emoji) in ["‚úÖ",
                                                                        "‚ùå"] and reaction.message.id == confirm_msg.id

        try:
            # Ch·ªù ph·∫£n ·ª©ng
            reaction, user = await self.bot.wait_for("reaction_add", timeout=60.0, check=check)

            # N·∫øu t·ª´ ch·ªëi
            if str(reaction.emoji) == "‚ùå":
                embed = discord.Embed(
                    title="‚ùå ƒê√£ H·ªßy",
                    description="B·∫°n ƒë√£ h·ªßy y√™u c·∫ßu tham gia m√¥n ph√°i.",
                    color=EMBED_COLOR_ERROR
                )
                return await ctx.send(embed=embed)

            # N·∫øu ƒë·ªìng √Ω, th√™m v√†o m√¥n ph√°i
            result = await add_member_to_sect(sect["sect_id"], ctx.author.id)

            if result:
                # G·ª≠i th√¥ng b√°o th√†nh c√¥ng
                embed = discord.Embed(
                    title="‚úÖ Tham Gia Th√†nh C√¥ng",
                    description=f"Ch√∫c m·ª´ng! B·∫°n ƒë√£ tr·ªü th√†nh th√†nh vi√™n c·ªßa m√¥n ph√°i **{sect['name']}**!",
                    color=EMBED_COLOR_SUCCESS
                )

                # Th√™m h∆∞·ªõng d·∫´n
                embed.add_field(
                    name="L·ªánh H·ªØu √çch",
                    value=(
                        "`!monphai` - Xem th√¥ng tin m√¥n ph√°i\n"
                        "`!monphai thanhvien` - Xem danh s√°ch th√†nh vi√™n\n"
                        "`!monphai conghien [s·ªë l∆∞·ª£ng]` - ƒê√≥ng g√≥p linh th·∫°ch cho m√¥n ph√°i"
                    ),
                    inline=False
                )

                await ctx.send(embed=embed)

                # Th√¥ng b√°o cho ch·ªß s·ªü h·ªØu
                try:
                    owner_user = self.bot.get_user(owner_id)
                    if owner_user:
                        owner_embed = discord.Embed(
                            title="üîî Th√¥ng B√°o M√¥n Ph√°i",
                            description=f"**{ctx.author.name}** ƒë√£ tham gia m√¥n ph√°i **{sect['name']}** c·ªßa b·∫°n!",
                            color=EMBED_COLOR_SUCCESS
                        )
                        await owner_user.send(embed=owner_embed)
                except:
                    pass  # B·ªè qua n·∫øu kh√¥ng g·ª≠i ƒë∆∞·ª£c DM
            else:
                # G·ª≠i th√¥ng b√°o l·ªói
                embed = discord.Embed(
                    title="‚ùå L·ªói",
                    description="ƒê√£ x·∫£y ra l·ªói khi tham gia m√¥n ph√°i. Vui l√≤ng th·ª≠ l·∫°i sau.",
                    color=EMBED_COLOR_ERROR
                )
                await ctx.send(embed=embed)

        except asyncio.TimeoutError:
            # N·∫øu h·∫øt th·ªùi gian
            embed = discord.Embed(
                title="‚è∞ H·∫øt Th·ªùi Gian",
                description="B·∫°n ƒë√£ kh√¥ng ph·∫£n h·ªìi k·ªãp th·ªùi. Y√™u c·∫ßu tham gia m√¥n ph√°i ƒë√£ b·ªã h·ªßy.",
                color=EMBED_COLOR_ERROR
            )
            await ctx.send(embed=embed)

    @sect.command(name="roi", aliases=["leave", "quit"])
    async def leave_sect(self, ctx):
        """R·ªùi kh·ªèi m√¥n ph√°i hi·ªán t·∫°i"""
        # L·∫•y th√¥ng tin ng∆∞·ªùi d√πng
        user = await get_user_or_create(ctx.author.id, ctx.author.name)
        sect_id = user.get("sect_id")

        # Ki·ªÉm tra ƒë√£ c√≥ m√¥n ph√°i ch∆∞a
        if not sect_id:
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description="B·∫°n ch∆∞a tham gia m√¥n ph√°i n√†o.",
                color=EMBED_COLOR_ERROR
            )
            return await ctx.send(embed=embed)

        # L·∫•y th√¥ng tin m√¥n ph√°i
        sect = await get_sect(sect_id)

        if not sect:
            # N·∫øu kh√¥ng t√¨m th·∫•y th√¥ng tin m√¥n ph√°i
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description=f"Kh√¥ng t√¨m th·∫•y th√¥ng tin v·ªÅ m√¥n ph√°i c·ªßa b·∫°n. C√≥ th·ªÉ do l·ªói d·ªØ li·ªáu.",
                color=EMBED_COLOR_ERROR
            )
            return await ctx.send(embed=embed)

        # Ki·ªÉm tra n·∫øu l√† ch·ªß s·ªü h·ªØu
        if sect["owner_id"] == ctx.author.id:
            # T·∫°o embed c·∫£nh b√°o
            embed = discord.Embed(
                title="‚ö†Ô∏è C·∫£nh B√°o",
                description=f"B·∫°n l√† ch·ªß s·ªü h·ªØu c·ªßa m√¥n ph√°i **{sect['name']}**. N·∫øu r·ªùi ƒëi, m√¥n ph√°i s·∫Ω b·ªã gi·∫£i t√°n v√† t·∫•t c·∫£ th√†nh vi√™n s·∫Ω b·ªã ƒëu·ªïi. B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ti·∫øp t·ª•c?",
                color=discord.Color.orange()
            )

            # G·ª≠i embed c·∫£nh b√°o
            confirm_msg = await ctx.send(embed=embed)

            # Th√™m reaction ƒë·ªÉ x√°c nh·∫≠n
            await confirm_msg.add_reaction("‚úÖ")
            await confirm_msg.add_reaction("‚ùå")

            # H√†m ki·ªÉm tra reaction
            def check(reaction, user):
                return user.id == ctx.author.id and str(reaction.emoji) in ["‚úÖ",
                                                                            "‚ùå"] and reaction.message.id == confirm_msg.id

            try:
                # Ch·ªù ph·∫£n ·ª©ng
                reaction, user = await self.bot.wait_for("reaction_add", timeout=60.0, check=check)

                # N·∫øu t·ª´ ch·ªëi
                if str(reaction.emoji) == "‚ùå":
                    embed = discord.Embed(
                        title="‚ùå ƒê√£ H·ªßy",
                        description="B·∫°n ƒë√£ h·ªßy y√™u c·∫ßu r·ªùi kh·ªèi m√¥n ph√°i.",
                        color=EMBED_COLOR_ERROR
                    )
                    return await ctx.send(embed=embed)

                # N·∫øu ƒë·ªìng √Ω, gi·∫£i t√°n m√¥n ph√°i
                from database.mongo_handler import sects_collection, users_collection

                # L·∫•y danh s√°ch th√†nh vi√™n
                members = sect.get("members", [])

                # C·∫≠p nh·∫≠t th√¥ng tin cho t·∫•t c·∫£ th√†nh vi√™n
                for member_id in members:
                    await update_user(member_id, {"sect_id": None})

                # X√≥a m√¥n ph√°i
                await sects_collection.delete_one({"sect_id": sect_id})

                # G·ª≠i th√¥ng b√°o th√†nh c√¥ng
                embed = discord.Embed(
                    title="‚úÖ Gi·∫£i T√°n M√¥n Ph√°i",
                    description=f"M√¥n ph√°i **{sect['name']}** ƒë√£ ƒë∆∞·ª£c gi·∫£i t√°n. T·∫•t c·∫£ th√†nh vi√™n ƒë√£ ƒë∆∞·ª£c ƒë∆∞a ra kh·ªèi m√¥n ph√°i.",
                    color=EMBED_COLOR_SUCCESS
                )

                await ctx.send(embed=embed)

                # Th√¥ng b√°o cho c√°c th√†nh vi√™n
                for member_id in members:
                    if member_id != ctx.author.id:
                        try:
                            member_user = self.bot.get_user(member_id)
                            if member_user:
                                member_embed = discord.Embed(
                                    title="üîî Th√¥ng B√°o M√¥n Ph√°i",
                                    description=f"M√¥n ph√°i **{sect['name']}** ƒë√£ b·ªã gi·∫£i t√°n b·ªüi ch·ªß s·ªü h·ªØu **{ctx.author.name}**. B·∫°n kh√¥ng c√≤n l√† th√†nh vi√™n c·ªßa m√¥n ph√°i n√†y n·ªØa.",
                                    color=EMBED_COLOR_ERROR
                                )
                                await member_user.send(embed=member_embed)
                        except:
                            pass  # B·ªè qua n·∫øu kh√¥ng g·ª≠i ƒë∆∞·ª£c DM

            except asyncio.TimeoutError:
                # N·∫øu h·∫øt th·ªùi gian
                embed = discord.Embed(
                    title="‚è∞ H·∫øt Th·ªùi Gian",
                    description="B·∫°n ƒë√£ kh√¥ng ph·∫£n h·ªìi k·ªãp th·ªùi. Y√™u c·∫ßu gi·∫£i t√°n m√¥n ph√°i ƒë√£ b·ªã h·ªßy.",
                    color=EMBED_COLOR_ERROR
                )
                await ctx.send(embed=embed)
        else:
            # N·∫øu l√† th√†nh vi√™n th∆∞·ªùng
            # T·∫°o embed x√°c nh·∫≠n
            embed = discord.Embed(
                title="‚ö†Ô∏è X√°c Nh·∫≠n",
                description=f"B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën r·ªùi kh·ªèi m√¥n ph√°i **{sect['name']}**?",
                color=discord.Color.orange()
            )

            # G·ª≠i embed x√°c nh·∫≠n
            confirm_msg = await ctx.send(embed=embed)

            # Th√™m reaction ƒë·ªÉ x√°c nh·∫≠n
            await confirm_msg.add_reaction("‚úÖ")
            await confirm_msg.add_reaction("‚ùå")

            # H√†m ki·ªÉm tra reaction
            def check(reaction, user):
                return user.id == ctx.author.id and str(reaction.emoji) in ["‚úÖ",
                                                                            "‚ùå"] and reaction.message.id == confirm_msg.id

            try:
                # Ch·ªù ph·∫£n ·ª©ng
                reaction, user = await self.bot.wait_for("reaction_add", timeout=60.0, check=check)

                # N·∫øu t·ª´ ch·ªëi
                if str(reaction.emoji) == "‚ùå":
                    embed = discord.Embed(
                        title="‚ùå ƒê√£ H·ªßy",
                        description="B·∫°n ƒë√£ h·ªßy y√™u c·∫ßu r·ªùi kh·ªèi m√¥n ph√°i.",
                        color=EMBED_COLOR_ERROR
                    )
                    return await ctx.send(embed=embed)

                # N·∫øu ƒë·ªìng √Ω, r·ªùi kh·ªèi m√¥n ph√°i
                result = await remove_member_from_sect(sect_id, ctx.author.id)

                if result:
                    # G·ª≠i th√¥ng b√°o th√†nh c√¥ng
                    embed = discord.Embed(
                        title="‚úÖ R·ªùi Kh·ªèi M√¥n Ph√°i",
                        description=f"B·∫°n ƒë√£ r·ªùi kh·ªèi m√¥n ph√°i **{sect['name']}** th√†nh c√¥ng.",
                        color=EMBED_COLOR_SUCCESS
                    )

                    await ctx.send(embed=embed)

                    # Th√¥ng b√°o cho ch·ªß s·ªü h·ªØu
                    try:
                        owner_user = self.bot.get_user(sect["owner_id"])
                        if owner_user:
                            owner_embed = discord.Embed(
                                title="üîî Th√¥ng B√°o M√¥n Ph√°i",
                                description=f"**{ctx.author.name}** ƒë√£ r·ªùi kh·ªèi m√¥n ph√°i **{sect['name']}** c·ªßa b·∫°n!",
                                color=EMBED_COLOR
                            )
                            await owner_user.send(embed=owner_embed)
                    except:
                        pass  # B·ªè qua n·∫øu kh√¥ng g·ª≠i ƒë∆∞·ª£c DM
                else:
                    # G·ª≠i th√¥ng b√°o l·ªói
                    embed = discord.Embed(
                        title="‚ùå L·ªói",
                        description="ƒê√£ x·∫£y ra l·ªói khi r·ªùi kh·ªèi m√¥n ph√°i. Vui l√≤ng th·ª≠ l·∫°i sau.",
                        color=EMBED_COLOR_ERROR
                    )
                    await ctx.send(embed=embed)

            except asyncio.TimeoutError:
                # N·∫øu h·∫øt th·ªùi gian
                embed = discord.Embed(
                    title="‚è∞ H·∫øt Th·ªùi Gian",
                    description="B·∫°n ƒë√£ kh√¥ng ph·∫£n h·ªìi k·ªãp th·ªùi. Y√™u c·∫ßu r·ªùi kh·ªèi m√¥n ph√°i ƒë√£ b·ªã h·ªßy.",
                    color=EMBED_COLOR_ERROR
                )
                await ctx.send(embed=embed)

    @sect.command(name="conghien", aliases=["donate", "contribute"])
    async def contribute_sect(self, ctx, amount: int = None):
        """ƒê√≥ng g√≥p linh th·∫°ch cho m√¥n ph√°i"""
        # Ki·ªÉm tra s·ªë l∆∞·ª£ng
        if amount is None or amount <= 0:
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description="Vui l√≤ng cung c·∫•p s·ªë l∆∞·ª£ng linh th·∫°ch h·ª£p l·ªá ƒë·ªÉ ƒë√≥ng g√≥p.\nV√≠ d·ª•: `!monphai conghien 100`",
                color=EMBED_COLOR_ERROR
            )
            return await ctx.send(embed=embed)

        # L·∫•y th√¥ng tin ng∆∞·ªùi d√πng
        user = await get_user_or_create(ctx.author.id, ctx.author.name)
        sect_id = user.get("sect_id")

        # Ki·ªÉm tra ƒë√£ c√≥ m√¥n ph√°i ch∆∞a
        if not sect_id:
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description="B·∫°n ch∆∞a tham gia m√¥n ph√°i n√†o.",
                color=EMBED_COLOR_ERROR
            )
            return await ctx.send(embed=embed)

        # Ki·ªÉm tra ƒë·ªß linh th·∫°ch
        user_linh_thach = user.get("linh_thach", 0)

        if user_linh_thach < amount:
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description=f"B·∫°n kh√¥ng ƒë·ªß linh th·∫°ch ƒë·ªÉ ƒë√≥ng g√≥p. Linh th·∫°ch hi·ªán c√≥: **{user_linh_thach}**",
                color=EMBED_COLOR_ERROR
            )
            return await ctx.send(embed=embed)

        # L·∫•y th√¥ng tin m√¥n ph√°i
        sect = await get_sect(sect_id)

        if not sect:
            # N·∫øu kh√¥ng t√¨m th·∫•y th√¥ng tin m√¥n ph√°i
            embed = discord.Embed(
                title="‚ùå L·ªói",
                description=f"Kh√¥ng t√¨m th·∫•y th√¥ng tin v·ªÅ m√¥n ph√°i c·ªßa b·∫°n. C√≥ th·ªÉ do l·ªói d·ªØ li·ªáu.",
                color=EMBED_COLOR_ERROR
            )
            return await ctx.send(embed=embed)

        # C·∫≠p nh·∫≠t t√†i nguy√™n m√¥n ph√°i
        from database.mongo_handler import sects_collection
        current_resources = sect.get("resources", 0)
        new_resources = current_resources + amount

        # C·∫≠p nh·∫≠t trong database
        await sects_collection.update_one(
            {"sect_id": sect_id},
            {"$set": {"resources": new_resources}}
        )

        # Tr·ª´ linh th·∫°ch c·ªßa ng∆∞·ªùi d√πng
        new_linh_thach = user_linh_thach - amount
        await update_user(ctx.author.id, {"linh_thach": new_linh_thach})

        # Ki·ªÉm tra c√≥ tƒÉng c·∫•p kh√¥ng
        level_up = False
        current_level = sect.get("level", 1)
        new_level = current_level

        # Quy t·∫Øc tƒÉng c·∫•p: m·ªói c·∫•p c·∫ßn 1000 * c·∫•p hi·ªán t·∫°i
        required_resources = 1000 * current_level

        if new_resources >= required_resources:
            new_level = current_level + 1
            level_up = True

            # C·∫≠p nh·∫≠t c·∫•p ƒë·ªô m√¥n ph√°i
            await sects_collection.update_one(
                {"sect_id": sect_id},
                {"$set": {"level": new_level}}
            )

        # G·ª≠i th√¥ng b√°o th√†nh c√¥ng
        embed = discord.Embed(
            title="‚úÖ ƒê√≥ng G√≥p Th√†nh C√¥ng",
            description=f"B·∫°n ƒë√£ ƒë√≥ng g√≥p **{amount}** linh th·∫°ch cho m√¥n ph√°i **{sect['name']}**!",
            color=EMBED_COLOR_SUCCESS
        )

        # Th√™m th√¥ng tin t√†i nguy√™n
        embed.add_field(
            name="T√†i Nguy√™n M√¥n Ph√°i",
            value=f"{EMOJI_LINH_THACH} {new_resources} (+{amount})",
            inline=True
        )

        # Th√™m th√¥ng tin c·∫•p ƒë·ªô
        if level_up:
            embed.add_field(
                name="üéâ TƒÉng C·∫•p!",
                value=f"M√¥n ph√°i ƒë√£ tƒÉng l√™n c·∫•p **{new_level}**!",
                inline=True
            )
        else:
            # Hi·ªÉn th·ªã ti·∫øn ƒë·ªô
            next_level_resources = 1000 * current_level
            progress = (new_resources / next_level_resources) * 100
            embed.add_field(
                name="Ti·∫øn ƒê·ªô TƒÉng C·∫•p",
                value=f"C·∫•p ƒë·ªô hi·ªán t·∫°i: **{current_level}**\nTi·∫øn ƒë·ªô: **{progress:.1f}%** ({new_resources}/{next_level_resources})",
                inline=True
            )

        # Th√™m th√¥ng tin linh th·∫°ch c√≤n l·∫°i
        embed.add_field(
            name="Linh Th·∫°ch C√≤n L·∫°i",
            value=f"{EMOJI_LINH_THACH} {new_linh_thach}",
            inline=False
        )

        # G·ª≠i embed
        await ctx.send(embed=embed)

        # Th√¥ng b√°o cho ch·ªß s·ªü h·ªØu n·∫øu kh√¥ng ph·∫£i l√† ng∆∞·ªùi ƒë√≥ng g√≥p
        if ctx.author.id != sect["owner_id"]:
            try:
                owner_user = self.bot.get_user(sect["owner_id"])
                if owner_user:
                    owner_embed = discord.Embed(
                        title="üîî Th√¥ng B√°o M√¥n Ph√°i",
                        description=f"**{ctx.author.name}** ƒë√£ ƒë√≥ng g√≥p **{amount}** linh th·∫°ch cho m√¥n ph√°i **{sect['name']}** c·ªßa b·∫°n!",
                        color=EMBED_COLOR_SUCCESS
                    )

                    # Th√™m th√¥ng tin tƒÉng c·∫•p n·∫øu c√≥
                    if level_up:
                        owner_embed.add_field(
                            name="üéâ TƒÉng C·∫•p!",
                            value=f"M√¥n ph√°i ƒë√£ tƒÉng l√™n c·∫•p **{new_level}**!",
                            inline=False
                        )

                    await owner_user.send(embed=owner_embed)
            except:
                pass  # B·ªè qua n·∫øu kh√¥ng g·ª≠i ƒë∆∞·ª£c DM

        # Log
        logger.info(f"{ctx.author.name} ƒë√£ ƒë√≥ng g√≥p {amount} linh th·∫°ch cho m√¥n ph√°i {sect['name']}")


async def setup(bot):
    await bot.add_cog(SectCog(bot))